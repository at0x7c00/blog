<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Install MySQL,JDK and Tomcat in Linux</title>
      <link href="/2017/01/04/Install-MySQL-JDK-and-Tomcat-in-Linux/"/>
      <url>/2017/01/04/Install-MySQL-JDK-and-Tomcat-in-Linux/</url>
      
        <content type="html"><![CDATA[<h1 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h1><p>在官网<a href="http://dev.mysql.com/downloads/mysql#downloads" target="_blank" rel="noopener">http://dev.mysql.com/downloads/mysql#downloads</a>选择合适您操作系统的版本进行下载， 这里以选择Linux Generic为例。</p><blockquote><p>MySQL官网上只能下载到最新的版本，想要下载以前的版本找起来非常费劲。你可以从这里来下载:<br><a href="http://download.softagency.net/MySQL/Downloads/MySQL-5.5/" target="_blank" rel="noopener">http://download.softagency.net/MySQL/Downloads/MySQL-5.5/</a></p></blockquote><p>把下载的文件上传到Linux某个临时文件夹里，然后解压文件，得到一个文件夹：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf mysql-5.5.45-linux2.6-x86_64.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">drwxr-xr-x 13 root root      4096 Jan  3 20:09 mysql-5.5.53-linux2.6-x86_64</span><br><span class="line">-rw-r--r--  1 root root 185923648 Jan  3 20:00 mysql-5.5.53-linux2.6-x86_64.tar.gz</span><br></pre></td></tr></table></figure><p>复制解压后的mysql目录到系统的本地软件目录:<br>执行命令：cp mysql-5.5.45-linux2.6-x86_64 /usr/local/mysql -r</p><p>添加mysql用户和mysql用户组:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql mysql</span><br></pre></td></tr></table></figure></p><p>切换到/user/local/mysql目录下，改变mysql目录的用户和组：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mysql/</span><br><span class="line">chown -R mysql:mysql ./</span><br></pre></td></tr></table></figure><h2 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./scripts/mysql_install_db  --user=mysql --basedir=/usr/<span class="built_in">local</span>/mysql --datadir=/usr/<span class="built_in">local</span>/mysql/data --pid-file=/usr/<span class="built_in">local</span>/mysql/data/mysql.pid --tmpdir=/tmp</span><br></pre></td></tr></table></figure><blockquote><p>如果报cannot open shared object file错误，可以执行如下命令：<br>apt-get install libaio1 libaio-dev</p></blockquote><p>把mysql文件夹的所属组和所属用户修改为root：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R root:root ./</span><br></pre></td></tr></table></figure></p><p>把data文件夹的所属组合所属用户修改为mysql：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R mysql:mysql data</span><br></pre></td></tr></table></figure></p><p>最终效果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zegp7tdd3qrlnkeswi3Z install]<span class="comment"># cd /usr/local/</span></span><br><span class="line">[root@iZ2zegp7tdd3qrlnkeswi3Z <span class="built_in">local</span>]<span class="comment"># ll</span></span><br><span class="line">total 60</span><br><span class="line">drwxr-xr-x   6 root root 4096 Dec 30 17:36 aegis</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Jan  3 20:44 bin</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 etc</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 games</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 include</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 lib</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 lib64</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 libexec</span><br><span class="line">drwxr-xr-x  13 root root 4096 Jan  3 20:11 mysql</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 sbin</span><br><span class="line">drwxr-xr-x.  5 root root 4096 Aug 14  2014 share</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 src</span><br><span class="line">[root@iZ2zegp7tdd3qrlnkeswi3Z <span class="built_in">local</span>]<span class="comment"># cd mysql</span></span><br><span class="line">[root@iZ2zegp7tdd3qrlnkeswi3Z mysql]<span class="comment"># ll</span></span><br><span class="line">total 72</span><br><span class="line">drwxr-xr-x  2 root  root   4096 Jan  3 20:12 bin</span><br><span class="line">-rw-r--r--  1 root  root  17987 Jan  3 20:11 COPYING</span><br><span class="line">drwxr-xr-x  6 mysql mysql  4096 Jan  4 13:56 data</span><br><span class="line">drwxr-xr-x  2 root  root   4096 Jan  3 20:11 docs</span><br><span class="line">drwxr-xr-x  3 root  root   4096 Jan  3 20:11 include</span><br><span class="line">-rw-r--r--  1 root  root    301 Jan  3 20:11 INSTALL-BINARY</span><br><span class="line">drwxr-xr-x  3 root  root   4096 Jan  3 20:11 lib</span><br><span class="line">drwxr-xr-x  4 root  root   4096 Jan  3 20:11 man</span><br><span class="line">drwxr-xr-x 10 root  root   4096 Jan  3 20:11 mysql-test</span><br><span class="line">-rw-r--r--  1 root  root   2496 Jan  3 20:11 README</span><br><span class="line">drwxr-xr-x  2 root  root   4096 Jan  3 20:11 scripts</span><br><span class="line">drwxr-xr-x 27 root  root   4096 Jan  3 20:11 share</span><br><span class="line">drwxr-xr-x  4 root  root   4096 Jan  3 20:11 sql-bench</span><br><span class="line">drwxr-xr-x  2 root  root   4096 Jan  3 20:11 support-files</span><br></pre></td></tr></table></figure><h2 id="添加开机启动"><a href="#添加开机启动" class="headerlink" title="添加开机启动"></a>添加开机启动</h2><p>执行命令把启动脚本放到开机初始化目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp support-files/mysql.server /etc/init.d/mysql</span><br></pre></td></tr></table></figure></p><p>启动之前，需要修改mysql的编码为utf8：<br>1.找到mysql的配置文件，拷贝到etc目录下，把/usr/local/mysql/support-files/my-medium.cnf 复制到 /etc/my.cnf。即用命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/<span class="built_in">local</span>/mysql/support-files/my-medium.cnf  /etc/my.cnf</span><br></pre></td></tr></table></figure></p><p>2.打开my.cnf修改编码<br>在[mysqld]下增加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">character-set-server=utf8</span><br></pre></td></tr></table></figure><p>启动mysql服务：执行命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql start</span><br></pre></td></tr></table></figure></p><p>修改MySQL的root用户密码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/mysqladmin -u root password <span class="string">'passw0rd'</span></span><br></pre></td></tr></table></figure></p><p>把mysql客户端放到默认路径：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/<span class="built_in">local</span>/mysql/bin/mysql /usr/<span class="built_in">local</span>/bin/mysql</span><br></pre></td></tr></table></figure></p><p>然后测试是否能顺利登录MySQL：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p[your password]</span><br></pre></td></tr></table></figure></p><p>记得给MySQL添加开机启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/init.d/</span><br><span class="line">chkconfig --add mysql</span><br></pre></td></tr></table></figure><h2 id="设置MySQL不区分大小写"><a href="#设置MySQL不区分大小写" class="headerlink" title="设置MySQL不区分大小写"></a>设置MySQL不区分大小写</h2><p>修改MySQL的配置文件my.cnf，在[mysqld]部分添加如下配置选项：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lower_case_table_names = 1</span><br></pre></td></tr></table></figure></p><p>这是没有办法的办法，最好的办法还是应该严格按照规范执行。目前觉得最佳实践是SQL语句中的库名、表名、字段名等都用小写就没这些问题了。</p><h2 id="定时备份任务"><a href="#定时备份任务" class="headerlink" title="定时备份任务"></a>定时备份任务</h2><p><a href="http://blog.huqiao.me/2017/01/05/MySQL-Backup/" target="_blank" rel="noopener">参考这里</a>。</p><h1 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h1><p>到官网下载合适的安装包，下载地址：<a href="http://www.oracle.com/technetwork/cn/java/javase/downloads/jdk7-downloads-1880260.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/cn/java/javase/downloads/jdk7-downloads-1880260.html</a>.</p><blockquote><p>和MySQL一样，因为JDK也是Oracle公司的，在官网也只提供最新版本的下载。我这里备份了一个：<a href="http://pan.baidu.com/s/1qYextPq" target="_blank" rel="noopener">http://pan.baidu.com/s/1qYextPq</a>。</p></blockquote><p>JDK的安装很简单，只需要将文件解压到/usr/local/中即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zegp7tdd3qrlnkeswi3Z <span class="built_in">local</span>]<span class="comment"># ll</span></span><br><span class="line">total 60</span><br><span class="line">drwxr-xr-x   6 root root 4096 Dec 30 17:36 aegis</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Jan  3 20:44 bin</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 etc</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 games</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 include</span><br><span class="line">drwxr-xr-x   8 root root 4096 Jan  4 11:56 jdk1.7.0_79</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 lib</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 lib64</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 libexec</span><br><span class="line">drwxr-xr-x  13 root root 4096 Jan  3 20:11 mysql</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 sbin</span><br><span class="line">drwxr-xr-x.  5 root root 4096 Aug 14  2014 share</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 src</span><br></pre></td></tr></table></figure><p>最要的是设置环境变量。<br>本编辑器gedit（如果没安装可以用vi）打开/etc/profile，在文件最后添加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/jdk1.7.0_79</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br></pre></td></tr></table></figure></p><p>保存后重新编译/etc/profile文件，测试Java是否可用:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zegp7tdd3qrlnkeswi3Z <span class="built_in">local</span>]<span class="comment"># java -version</span></span><br><span class="line">java version <span class="string">"1.7.0_79"</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.7.0_79-b15)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)</span><br></pre></td></tr></table></figure><h1 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h1><p>Tomcat的下载就不用多说了，可以在<a href="http://tomcat.apache.org/" target="_blank" rel="noopener">官网</a>找到下载链接。也可以使用这个镜像地址：<a href="http://archive.apache.org/dist/tomcat/" target="_blank" rel="noopener">http://archive.apache.org/dist/tomcat/</a>。</p><p>也和MySQL、JDK一样，解压到local目录中即可：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">drwxr-xr-x   6 root root 4096 Dec 30 17:36 aegis</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Jan  3 20:44 bin</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 etc</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 games</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 include</span><br><span class="line">drwxr-xr-x   8 root root 4096 Jan  4 11:56 jdk1.7.0_79</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 lib</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 lib64</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 libexec</span><br><span class="line">drwxr-xr-x  13 root root 4096 Jan  3 20:11 mysql</span><br><span class="line">drwxr-xr-x  10 root root 4096 Jan  4 16:43 NitsmUpload</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 sbin</span><br><span class="line">drwxr-xr-x.  5 root root 4096 Aug 14  2014 share</span><br><span class="line">drwxr-xr-x.  2 root root 4096 Sep 23  2011 src</span><br><span class="line">drwxr-xr-x  10 root root 4096 Jan  4 13:50 tomcat-8.0.36</span><br></pre></td></tr></table></figure></p><h2 id="为Tomcat添加开机启动项"><a href="#为Tomcat添加开机启动项" class="headerlink" title="为Tomcat添加开机启动项"></a>为Tomcat添加开机启动项</h2><p>进入tomcat-8.0.36/bin目录中；<br>修改catalina.sh文件，在export处增加如下内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CATALINA_HOME=/usr/<span class="built_in">local</span>/tomcat-8.0.36</span><br><span class="line">JAVA_HOME=/usr/<span class="built_in">local</span>/jdk1.7.0_79</span><br></pre></td></tr></table></figure></p><p>创建catalina.sh链接到/etc/init.d中：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/<span class="built_in">local</span>/apache-tomcat-7.0.63/bin/catalina.sh  /etc/init.d/tomcat</span><br></pre></td></tr></table></figure></p><p>添加到自动服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-rc.d  –f  tomcat  defaults（删除 defaults 换成remove）</span><br></pre></td></tr></table></figure></p><h2 id="使用chkconfig添加开机启动"><a href="#使用chkconfig添加开机启动" class="headerlink" title="使用chkconfig添加开机启动"></a>使用chkconfig添加开机启动</h2><p>在/etc/init.d/下创建tomcat文件，内容为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># description: Tomcat Start Stop Restart  </span></span><br><span class="line"><span class="comment"># processname: tomcat  </span></span><br><span class="line"><span class="comment"># chkconfig: 234 20 80  </span></span><br><span class="line">JAVA_HOME=/usr/<span class="built_in">local</span>/java/jdk1.7.0_79  </span><br><span class="line"><span class="built_in">export</span> JAVA_HOME  </span><br><span class="line">PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span>  </span><br><span class="line"><span class="built_in">export</span> PATH  </span><br><span class="line">CATALINA_HOME=/usr/apache-tomcat-8.0.36  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span>  </span><br><span class="line">start)  </span><br><span class="line">sh <span class="variable">$CATALINA_HOME</span>/bin/startup.sh  </span><br><span class="line">;;   </span><br><span class="line">stop)     </span><br><span class="line">sh <span class="variable">$CATALINA_HOME</span>/bin/shutdown.sh  </span><br><span class="line">;;   </span><br><span class="line">restart)  </span><br><span class="line">sh <span class="variable">$CATALINA_HOME</span>/bin/shutdown.sh  </span><br><span class="line">sh <span class="variable">$CATALINA_HOME</span>/bin/startup.sh  </span><br><span class="line">;;   </span><br><span class="line"><span class="keyword">esac</span>      </span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure></p><p>执行如下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chkconfig –add tomcat</span><br><span class="line">chkconfig –level 2345 tomcat on</span><br></pre></td></tr></table></figure></p><h2 id="修改Tomcat默认编码为UTF8"><a href="#修改Tomcat默认编码为UTF8" class="headerlink" title="修改Tomcat默认编码为UTF8"></a>修改Tomcat默认编码为UTF8</h2><p>修改/usr/local/apache-tomcat-8.0.36/conf/server.xml文件：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"80"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">redirectPort</span>=<span class="string">"8443"</span> <span class="attr">URIEncoding</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="设置内存"><a href="#设置内存" class="headerlink" title="设置内存"></a>设置内存</h2><p>要添加在tomcat 的bin 下catalina.sh 里，位置cygwin=false前 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JAVA_OPTS=<span class="string">"-Xms256m -Xmx512m -Xss1024K -XX:PermSize=128m -XX:MaxPermSize=256m"</span> </span><br><span class="line">cygwin=<span class="literal">false</span></span><br></pre></td></tr></table></figure><blockquote><p>Tomcat8容易遇到启动缓慢的问题，参考<a href="http://nobodyiam.com/2016/06/07/tomcat-startup-slow/" target="_blank" rel="noopener">Tomcat启动缓慢问题解决</a>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Linux </tag>
            
            <tag> Java </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Hibernate实现多租户（Multi-Tendency）功能</title>
      <link href="/2016/06/21/hibernate-multitendency/"/>
      <url>/2016/06/21/hibernate-multitendency/</url>
      
        <content type="html"><![CDATA[<p>这几天的研究，四处搜寻资料，基本理清实现多租户的一个思路。至于多租户是什么可参考《<a href="http://www.ibm.com/developerworks/cn/java/j-lo-mutiltenancy/index.html?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="noopener">浅析多租户在 Java 平台和某些 PaaS 上的实现</a>》。里面提到了很多激动人心的是JavaEE8会加入对多租户的支持。但是这个真的不知道要等到什么时候了。</p><hr><p>我所维护的一个系统是基于Hibernate的，现在准备修改架构，希望能够提供Saas服务。这样一个升级，首先想到的是，数据库的数据会急剧增加，面对大数据的时候，首先的选择估计会扔掉Hibernate，使用纯的JDBC或者用MyBatis。</p><p>如果使用JDBC那就完全自由了，但自由确实自由了，现有的整个系统是以Hibernate为基础的，扔掉Hibernate的前提是你要自己来实现至少用起来还算凑合的一个DAO。我没有找到市面上有这么一种JDBC框架，方便使用者进行分表、分库等操作。</p><p>另外我还看到EclipseLink也可以实现多租户功能，但据说他的社区比Hibernate差多了，也只能作罢。</p><hr><p>所以，还是回到了这篇文章上来了：《<a href="http://www.ibm.com/developerworks/cn/java/j-lo-dataMultitenant/index.html" target="_blank" rel="noopener">数据层的多租户浅谈</a>》（看完了记得回来，我这里有补充）。</p><p>这里讲到了Hibernate在4.0的时候就已经支持多租户了，实现起来分几种方式<br>1.一个租户一个单独数据库（DATABASE）-<strong>注意，是物理意义上的独立，可以理解为不同的数据源</strong>；<br>2.多个租户公用一个数据源，但每个租户有不同的数据库（SCHEMA）；<br>3.多个租户都在一个数据库里，数据也完全在一起，通过一个字段（列）来区分（DISCRIMINATOR）；</p><p>我在看上面那篇引文的时候对这三种的描述上是有<strong>误解</strong>的，我以为：<br>DATABASE：不同数据库，也许是同一个数据源上的<br>SCHEMA：对多个租户进行分表（但从头到尾，没有看到任何地方用分表的方式实现过多租户）</p><p>说说我对这三种情况如何选择的想法。<br>首先如果你的数据量不大那你完全可以使用DISCRIMINATOR方式，也就是把所有数据都放到一个表里面。这样做的前提是，你是在从无到有新建一个项目。否则，将不支持多租户的系统改造成多租户时不建议这么做。因为这有可能会影响到你程序的方方面面，你要改的代码也许不计其数。<br>第二种，分数据库（SCHEMA）。反正我是选择的这种方式，因为多租户首先考虑的是有可能数据量会很大，相对于DISCRIMINATOR方式而言，这种分数据库其实就是分表了。另外，对于数据的备份、迁移都是非常方便的。<br>最后一种，分数据源（DATABASE）。我觉得这完全可以和SCHEMA方式配合起来用，作为它的一种补充，什么时候需要补充？当一个数据源上的数据库多到严重影响性能的时候，就可以考虑分多个数据源了。</p><hr><p>好了说了这么多，直接上代码吧，首先，Hibernate给了我们一个确定tendantId的接口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import org.hibernate.context.spi.CurrentTenantIdentifierResolver;</span><br><span class="line"></span><br><span class="line">import com.xyz.util.threadlocal.ThreadLocalUtil;</span><br><span class="line"></span><br><span class="line">public class TenantIdResolver implements CurrentTenantIdentifierResolver &#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public String resolveCurrentTenantIdentifier() &#123;</span><br><span class="line">String tendantId = ThreadLocalUtil.tendantId.get();</span><br><span class="line">tendantId  = &quot;dataSource1:db1&quot;;//TODO 删除TEST</span><br><span class="line">return tendantId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public boolean validateExistingCurrentSessions() &#123;</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里也前面引文里提到的不太一样的是，我把tendantId的信息量加大了，不光能表示使用哪个数据库，还能同时表示使用哪个数据源。（前面提到的，实现SCHEMA时还实现DATABASE）<br>这里使用了一个ThreadLocal来存储tendantId，具体的设置点在哪儿，你可以根据你的应用场景来考虑。我现在还没考虑到这里，等考虑好了再来补充。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.SQLException;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">import org.hibernate.HibernateException;</span><br><span class="line">import org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider;</span><br><span class="line">import org.hibernate.service.jdbc.connections.spi.MultiTenantConnectionProvider;</span><br><span class="line">import org.hibernate.service.spi.Configurable;</span><br><span class="line">import org.hibernate.service.spi.ServiceRegistryAwareService;</span><br><span class="line">import org.hibernate.service.spi.ServiceRegistryImplementor;</span><br><span class="line">import org.hibernate.service.spi.Stoppable;</span><br><span class="line"></span><br><span class="line">import com.xyz.util.threadlocal.ThreadLocalUtil;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 分数据库多租户</span><br><span class="line"> * @author huqiao(412853638@qq.com)</span><br><span class="line"> */</span><br><span class="line">public class SchemaBasedMultiTenantConnectionProvider implements MultiTenantConnectionProvider, Stoppable,</span><br><span class="line">Configurable, ServiceRegistryAwareService   &#123;</span><br><span class="line"></span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line">private final C3P0ConnectionProvider connectionProvider = new C3P0ConnectionProvider();</span><br><span class="line">private final C3P0ConnectionProvider connectionProvider2 = new C3P0ConnectionProvider();</span><br><span class="line"></span><br><span class="line">private final Map&lt;String,C3P0ConnectionProvider&gt; tenantIdConnMap = new HashMap&lt;String,C3P0ConnectionProvider&gt;();</span><br><span class="line"></span><br><span class="line">private C3P0ConnectionProvider getProvider()&#123;</span><br><span class="line">String tenantIdentifier = ThreadLocalUtil.tendantId.get();</span><br><span class="line">tenantIdentifier = tenantIdentifier.split(&quot;:&quot;)[0];</span><br><span class="line">return tenantIdConnMap.get(tenantIdentifier);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public Connection getAnyConnection() throws SQLException &#123;</span><br><span class="line">return getProvider().getConnection();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void releaseAnyConnection(Connection connection) throws SQLException &#123;</span><br><span class="line">getProvider().closeConnection(connection);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public Connection getConnection(String tenantIdentifier) throws SQLException &#123;</span><br><span class="line">//ThreadLocalUtil.tendantId.set(tenantIdentifier);</span><br><span class="line">tenantIdentifier = tenantIdentifier.split(&quot;:&quot;)[1];</span><br><span class="line">final Connection connection = getAnyConnection();</span><br><span class="line">try &#123;</span><br><span class="line">connection.createStatement().execute(&quot;USE &quot; + tenantIdentifier);</span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">throw new HibernateException(&quot;Could not alter JDBC connection to specified schema [&quot; + tenantIdentifier</span><br><span class="line">+ &quot;]&quot;, e);</span><br><span class="line">&#125;</span><br><span class="line">return connection;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void releaseConnection(String tenantIdentifier, Connection connection) throws SQLException &#123;</span><br><span class="line">try &#123;</span><br><span class="line">connection.createStatement().execute(&quot;USE test&quot;);</span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">throw new HibernateException(&quot;Could not alter JDBC connection to specified schema [&quot; + tenantIdentifier</span><br><span class="line">+ &quot;]&quot;, e);</span><br><span class="line">&#125;</span><br><span class="line">getProvider().closeConnection(connection);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public boolean isUnwrappableAs(Class unwrapType) &#123;</span><br><span class="line">return this.getProvider().isUnwrappableAs(unwrapType);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public &lt;T&gt; T unwrap(Class&lt;T&gt; unwrapType) &#123;</span><br><span class="line">return this.getProvider().unwrap(unwrapType);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void stop() &#123;</span><br><span class="line">this.getProvider().stop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public boolean supportsAggressiveRelease() &#123;</span><br><span class="line">return this.getProvider().supportsAggressiveRelease();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@SuppressWarnings(&#123; &quot;unchecked&quot;, &quot;rawtypes&quot; &#125;)</span><br><span class="line">@Override</span><br><span class="line">public void configure(Map configurationValues) &#123;</span><br><span class="line"></span><br><span class="line">//connectorProvider初始化</span><br><span class="line">this.connectionProvider.configure(configurationValues);</span><br><span class="line"></span><br><span class="line">configurationValues.put(&quot;hibernate.connection.url&quot;, &quot;jdbc:mysql://&#123;db-server-url&#125;:3306/dbname?useUnicode=true&amp;amp;characterEncoding=utf8&quot;);</span><br><span class="line">configurationValues.put(&quot;hibernate.connection.password&quot;, &quot;password&quot;);</span><br><span class="line">this.connectionProvider2.configure(configurationValues);</span><br><span class="line"></span><br><span class="line">//connectorProvider与tenantId的关系映射</span><br><span class="line">tenantIdConnMap.put(&quot;dataSource1&quot;, connectionProvider);</span><br><span class="line">tenantIdConnMap.put(&quot;dataSource2&quot;, connectionProvider2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void injectServices(ServiceRegistryImplementor serviceRegistry) &#123;</span><br><span class="line">connectionProvider.injectServices(serviceRegistry);</span><br><span class="line">connectionProvider2.injectServices(serviceRegistry);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和引文不同的是，这里直接使用的是C3P0ConnectionProvider,而不是DriverManagerConnectionProviderImpl，DriverManagerConnectionProviderImpl自己实现了一个连接池，但我觉得使用C3P0应该才是正道。</p><p>引文中只创建了一个connectionProvider，我在这里创建了两个，其实可以是N个。然后再在getProvider()方法中来确定使用哪个connectionProvider。OK这其实就是多个数据源的实现。</p><p>多个数据库的实现在方法getConnection()里，可以看到，在切换数据库的时候就是简单地使用了一个USE而已。</p><p>这个代码现在存在的问题在configure(）方法里。我现在还没考虑好如何根据业务需求来创建N个connectionProvier并且做好映射，这里仅仅是为了试验，仓促地构建了另外一个connectionProvider，它和配置的connectionProvider的区别仅仅是url和password不一样。</p><p>最后，injectServices方法里，一定要为每一个connectionProvider都injectServices一下。</p><p>接下来看看Hibernate配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id=&quot;sessionFactory&quot;</span><br><span class="line">class=&quot;org.springframework.orm.hibernate4.LocalSessionFactoryBean&quot;&gt;</span><br><span class="line">&lt;!-- </span><br><span class="line">&lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;</span><br><span class="line">--&gt;</span><br><span class="line">&lt;property name=&quot;hibernateProperties&quot;&gt;</span><br><span class="line">&lt;props&gt;</span><br><span class="line">&lt;!-- C3P0的配置 --&gt;</span><br><span class="line">&lt;prop key=&quot;c3p0.jdbcUrl&quot; &gt;$&#123;jdbc.url&#125;&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;c3p0.user&quot; &gt;$&#123;jdbc.username&#125;&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;c3p0.password&quot;  &gt;$&#123;jdbc.password&#125;&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;c3p0.preferredTestQuery&quot; &gt;$&#123;preferredTestQuery&#125;&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;c3p0.idleConnectionTestPeriod&quot; &gt;$&#123;idleConnectionTestPeriod&#125;&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;c3p0.testConnectionOnCheckout&quot; &gt;$&#123;testConnectionOnCheckout&#125;&lt;/prop&gt;</span><br><span class="line">&lt;!-- 数据源配置 --&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.connection.url&quot;&gt;jdbc:mysql://localhost:3306/dbname?useUnicode=true&amp;amp;characterEncoding=utf8&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.connection.username&quot;&gt;root&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.connection.password&quot;&gt;root&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.connection.driver_class&quot;&gt;com.mysql.jdbc.Driver&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.connection.autocommit&quot;&gt;false&lt;/prop&gt;</span><br><span class="line">&lt;!-- Hibernate配置 --&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.dialect&quot;&gt;$&#123;hibernate.dialect&#125;&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.hbm2ddl.auto&quot;&gt;$&#123;hibernate.hbm2ddl.auto&#125;&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.max_fetch_depth&quot;&gt;$&#123;hibernate.maxFetchDepth&#125;&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.show_sql&quot;&gt;$&#123;hibernate.show_sql&#125;&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.format_sql&quot;&gt;$&#123;hibernate.format_sql&#125;&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.jdbc.batch_size&quot;&gt;$&#123;hibernate.jdbc.batch_size&#125;&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.cache.use_query_cache&quot;&gt;$&#123;cache.use_query_cache&#125;&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.cache.use_second_level_cache&quot;&gt;$&#123;cache.use_second_level_cache&#125;&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.cache.region.factory_class&quot;&gt;$&#123;hibernate.cache.region.factory_class&#125;&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.temp.use_jdbc_metadata_defaults&quot;&gt;$&#123;hibernate.temp.use_jdbc_metadata_defaults&#125;&lt;/prop&gt;</span><br><span class="line">&lt;!-- 多租户配置 --&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.multiTenancy&quot;&gt;SCHEMA&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.tenant_identifier_resolver&quot;&gt;com.xyz.TenantIdResolver&lt;/prop&gt;</span><br><span class="line">&lt;prop key=&quot;hibernate.multi_tenant_connection_provider&quot;&gt;com.xyz.SchemaBasedMultiTenantConnectionProvider&lt;/prop&gt;</span><br><span class="line">&lt;/props&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property name=&quot;packagesToScan&quot; value=&quot;com.xyz.*.entity&quot;/&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure><p>因为使用了C3P0，这里增加了相应的配置。另外注意一下，我这里原先配置的dataSource被废掉了，应为是我们自己创建C3P0的ConnectionProvider。如果看过引文了，那么下面的多租户配置就不多说了吧。</p><p><strong><em>后话</em></strong><br>其中还有很多不够完善的地方，等想好了再修改补充吧。<br>接下来应该考虑如何按照业务需要来初始化不同的ConnectionProvider了。如果这一切都做好了，还应该考虑考虑多租户环境下，如何实现用户的登录逻辑。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SAAS </tag>
            
            <tag> 多租户 </tag>
            
            <tag> Hibernate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式(embed)Tomcat的使用</title>
      <link href="/2014/10/24/%E5%B5%8C%E5%85%A5%E5%BC%8F(embed)Tomcat%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2014/10/24/%E5%B5%8C%E5%85%A5%E5%BC%8F(embed)Tomcat%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>title: 嵌入式(embed)Tomcat的使用 date: 2014-10-24 16:55 categories: Tomcat<br>tags:<br>本来想用InstallAnyWhere来制作一个安装文件，里面包含一个tomcat，结果发现InstallAnyWhere一时半会儿可能学不下来。我的目的是想用Java SWT做一个壳子，内嵌一个浏览器，这个浏览器访问tomcat应用，让整个程序看起来像是一个CS架构的。我需要的功能倒是不复杂，想想能不能自己实现一个tomcat。Tomcat有没有提供这样的功能呢，不小心搜索了一下“嵌入式Tomcat”，还真有，并且在Tomcat5的时候就已经支持了：<br><a href="https://devcenter.heroku.com/articles/create-a-java-web-application-using-embedded-tomcat#create-your-pom-xml" target="_blank" rel="noopener">https://devcenter.heroku.com/articles/create-a-java-web-application-using-embedded-tomcat#create-your-pom-xml</a><br>他用的maven，直接到官网上<a href="http://apache.fayea.com/apache-mirror/tomcat/tomcat-7/v7.0.56/bin/embed/apache-tomcat-7.0.56-embed.zip" target="_blank" rel="noopener">下载embed版的压缩包</a>下来解压放到自己项目的lib目录中，并添加到buildpath中。<br>按这上面的说法抄一个吧，代码很简单：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        String webappDirLocation = <span class="string">"src/main/webapp/"</span>;</span><br><span class="line">        Tomcat tomcat = <span class="keyword">new</span> Tomcat();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//The port that we should run on can be set into an environment variable</span></span><br><span class="line">        <span class="comment">//Look for that variable and default to 8080 if it isn't there.</span></span><br><span class="line">        String webPort = System.getenv(<span class="string">"PORT"</span>);</span><br><span class="line">        <span class="keyword">if</span>(webPort == <span class="keyword">null</span> || webPort.isEmpty()) &#123;</span><br><span class="line">            webPort = <span class="string">"8080"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        tomcat.setPort(Integer.valueOf(webPort));</span><br><span class="line"></span><br><span class="line">        tomcat.addWebapp(<span class="string">"/"</span>, <span class="keyword">new</span> File(webappDirLocation).getAbsolutePath());</span><br><span class="line">        System.out.println(<span class="string">"configuring app with basedir: "</span> + <span class="keyword">new</span> File(<span class="string">"./"</span> + webappDirLocation).getAbsolutePath());</span><br><span class="line"></span><br><span class="line">        tomcat.start();</span><br><span class="line">        tomcat.getServer().await();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>按照该文章的步骤完全可以得出正确结果，但是他的方法生成了一个很复杂的bat文件，搞半天不还是搞出了一个和tomcat一模一样的东西来。但是如果直接run这个main方法，会报下面的错误：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">org.apache.jasper.JasperException: java.lang.IllegalStateException: No Java compiler available</span><br><span class="line">org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:585)</span><br><span class="line">org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:391)</span><br><span class="line">org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:395)</span><br><span class="line">org.apache.jasper.servlet.JspServlet.service(JspServlet.java:339)</span><br><span class="line">javax.servlet.http.HttpServlet.service(HttpServlet.java:727)</span><br><span class="line">org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)</span><br></pre></td></tr></table></figure></p><p>追踪源码，发现是在load类org.apache.jasper.compiler.JDTCompiler的时候出了问题。但是这个类确实已经存在于编译路径中了，咋整？直接在main方法中在启动tomcat之前load一把试试：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class.forName(<span class="string">"org.apache.jasper.compiler.JDTCompiler"</span>);</span><br></pre></td></tr></table></figure></p><p>结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Caused by: java.lang.ClassNotFoundException: org.eclipse.jdt.internal.compiler.env.INameEnvironment</span><br><span class="line">at java.net.URLClassLoader<span class="variable">$1</span>.run(Unknown Source)</span><br><span class="line">at java.net.URLClassLoader<span class="variable">$1</span>.run(Unknown Source)</span><br><span class="line">at java.security.AccessController.doPrivileged(Native Method)</span><br><span class="line">at java.net.URLClassLoader.findClass(Unknown Source)</span><br><span class="line">at java.lang.ClassLoader.loadClass(Unknown Source)</span><br><span class="line">at sun.misc.Launcher<span class="variable">$AppClassLoader</span>.loadClass(Unknown Source)</span><br><span class="line">at java.lang.ClassLoader.loadClass(Unknown Source)</span><br><span class="line">... 3 more</span><br></pre></td></tr></table></figure></p><p>发现，其实是没有上面的这个类。从<a href="http://central.maven.org/maven2/org/eclipse/jdt/core/compiler/ecj/4.4/ecj-4.4.jar" target="_blank" rel="noopener">网上找到</a>，并加入到编译路径下就ok了：</p><p><img src="http://img.blog.csdn.net/20141024165118266?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaW1odXFpYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt></p><p>接下来，把webapp换成真实项目的路径，该项目中使用了spring、Hibernate等工具：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        String webappDirLocation = <span class="string">"src/main/webapp/"</span>;</span><br><span class="line">        Tomcat tomcat = <span class="keyword">new</span> Tomcat();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//The port that we should run on can be set into an environment variable</span></span><br><span class="line">        <span class="comment">//Look for that variable and default to 8080 if it isn't there.</span></span><br><span class="line">        String webPort = System.getenv(<span class="string">"PORT"</span>);</span><br><span class="line">        <span class="keyword">if</span>(webPort == <span class="keyword">null</span> || webPort.isEmpty()) &#123;</span><br><span class="line">            webPort = <span class="string">"8080"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        tomcat.setPort(Integer.valueOf(webPort));</span><br><span class="line"></span><br><span class="line"><span class="comment">//      tomcat.addWebapp("/", new File(webappDirLocation).getAbsolutePath());</span></span><br><span class="line">        tomcat.addWebapp(<span class="string">"/nea"</span>, <span class="string">"D:\\apache-tomcat-7.0.34\\webapps\\nea"</span>);</span><br><span class="line">        System.out.println(<span class="string">"configuring app with basedir: D:\\apache-tomcat-7.0.34\\webapps\\nea"</span>);</span><br><span class="line"></span><br><span class="line">        tomcat.start();</span><br><span class="line">        tomcat.getServer().await();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>重新启动，发现spring mvc 的路径映射、Hibernate数据库初始化等动作正常执行了。 </p><p>服务器有了，那前端呢？Chrome也有嵌入式的，看这里：<a href="http://opensource.spotify.com/cefbuilds/index.html" target="_blank" rel="noopener">http://opensource.spotify.com/cefbuilds/index.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Tomcat </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>由request.getSession()想到的函数参数设计原则</title>
      <link href="/2014/04/16/%E7%94%B1request.getSession()%E6%83%B3%E5%88%B0%E7%9A%84%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/"/>
      <url>/2014/04/16/%E7%94%B1request.getSession()%E6%83%B3%E5%88%B0%E7%9A%84%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</url>
      
        <content type="html"><![CDATA[<p>我们经常这么干，通过request.getSession()获取到session，然后查询其中的变量来判断当前用户是否登录。一天遇到有人问，能不能通过request.getSession()==null来判断用户没有登录呢？立马想到，什么时候会返回空呢？浏览器每次访问到服务器时，服务器会自动给创建一个session啊。那不能为空啊?但是超时或者通过手动的invalidate()之后session确实会失效，失效了返回就应该是空啊?</p><p>查看API才知道getSession()还有另外一个可以传递boolean类型参数的版本，传递true表示没有获取到session时自动创建一个，传递false则不创建。疑问解开了，还是自己太二了，不了解人家的API。但是后来发现，网上其他很多人都遇到了这个相同的疑问，开始反思这API设计的是否有问题。之所以出现这样的疑问，是因为大家很容易将这个函数的boolean参数给遗忘掉，以至于到最后大家都每天熟练的使用request.getSession()，只知道他能获取到session。这是函数设计上的一个忌讳，《Clear Code》中说<strong>标识参数（布尔参数）的存在意味着你在公然宣布，这个函数做了不止一件事</strong>，即便是HttpServletRequest中的getSession做了重载，但是它起到的效果是一样的（对外界来说是一个函数做了两件事情）。</p><p>另外，getSession()函数的名称和其实际的操作内容也有出入，《Clear Code》中说<strong>函数实际的操作要与名称相符，不能背后还有其他副作用（这也是“只做一件事”的原则）</strong>，而getSession()却不仅仅只是“get“，还带有了”create“的含义。</p><p>当然了，也许设计者考虑的是，getSession(true)比getSession(false)更为常用，并且创建一个session也无关紧要，也不影响谁，所以有意将getSession(flase)给弱化了。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>雨记</title>
      <link href="/2010/05/05/20100505-%E9%9B%A8%E8%AE%B0/"/>
      <url>/2010/05/05/20100505-%E9%9B%A8%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>08年年寒假结束，我从安徽大哥家回辽宁学校。我提着行李箱向大哥、大嫂道别。之前，他们硬是将五百块钱塞给了我。</p><p>爸爸那时也在大哥那里，起身送我。到外面街上打车，要经过一条长长的小巷，因为是晚上，巷子里安静得没有一个人。我跟爸爸打着伞并排地走着。爸爸说到那边后要好好照顾自己，钱不能太省，饭还是要吃饱。我问他的病，问他吃饭时还有没有哽咽的感觉。他淡淡地说已经没有了。我明明知道那是骗我的，可我却好像真的就相信了，并且感到高兴。</p><p>我跟爸一样，都不怎么爱说话，所以都沉默地走着。我没有说的是爸爸你要好好照顾自己，保重身体。爸爸没有说的是他的病已经很严重了。</p><p>走出小巷，匆匆过穿过马路，到另一边等公交车。我们刚到那边的站台，车就过来了。我上车还没有找到座位车就走了。看见前方车灯照射的夜空全是急骤下落的雨滴。我向车后窗去找我爸，却只看到一片漆黑。后悔长长的小巷里面我选择了沉默，以为还能在站台上和爸一起静静地等车，却没有想到车会来得这么快。</p><p>车带走了我，也带走了我爸。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<p>你不需要知道我是谁。现实充满规则，而这里我想将规则降低到最少。不要去在意别人的眼光。记录我内心最真实的想法。</p><ul><li>先学习基础知识，懂得了原理之后，最终还是要回到程序员最具价值的部分–解决问题的能力。熟悉各种算法原理；保持追寻问题答案的好奇心（玩，而不是任务）；</li><li>光看书学习，而没有产出，那就是自娱自乐。做学问还得有个论文要输出，如果学习只进不出，其实很难保证学习的质量！</li><li>每天能进步的其实很少，于是很多人因为短期看不到效果而早早放弃。他们不知道通过每天很少的积累，过不了多长时间就能看到巨大的效果</li><li>内心空虚的人需要借助于外部刺激才能找到快感 </li><li>时刻警惕别落入“用时间换金钱”的陷进，要注意积累自己的资产！</li><li>勿在浮沙筑高楼：基础打牢之后，再学习高层知识时会得心应手。一旦某个基础在你脑中是一个黑洞，那么学习高层知识时，遇到黑洞的次数越多，知识大楼将更加倾斜，潜意识里会对当前的内容产生怀疑。因为这些知识“无依无靠”，无法从已有知识进延伸。黑洞越多，知识将会被碎片化，成为知识孤岛。也可以看出是，知识网络千疮百孔，很容易破碎。</li><li>别自欺欺人，要直面盲点，不会的就是永远不会，以后遇到了还是不会。如果下定决心把它弄明白了，就在也不怕了。实在一时弄不明白，至少要把黑洞的边界搞清楚。哪天回头再研究是也知道目标是什么。</li><li>学东西时更知道如何规划先后顺序，知道自己的盲点在何处</li><li>持续不断地学习某项技能，得到的不仅是知识本身，还能培养更强的毅力。另外，学的更多之后，竟然变得更会学了！</li><li>一天能做的事情很少，但是不能不做，因为每天很少的积累，加起来就会很可观！</li><li>学习不能偏废，要保持平衡，否则容易焦虑</li><li>找到自己的归宿和目标才能得到真正的平静</li><li>没有心流的阅读等于浪费时间</li><li>要乐观，不要抑郁；学会避免压力</li><li>我们常常意识不到问题的存在，直到有人解决了这个问题。不要去问客户需求是什么，耐心观察和思考人们做事的方式，然后发现更好的解决方案。</li><li>经常发现读书总是前面读后面忘，这是因为没有记笔记，没有将知识内化。如果能整理成条理清晰的文章传授他人，那么就更好了。</li><li>快速学习的方法：弄懂原理，其他非原理的东西只记录去哪儿查即可—学会运用文档（文档不是从头到尾读的，而是我需要读的时候知道怎么读）。</li><li>创业：做很重要的，但是还没有被别人重视的事情</li><li>欲速则不达：学习的大忌讳就是“还没学会爬就像学走”。忍住性子，分清顺序学，不怕慢就怕翻船、怕半途而废！</li><li>书看不下去的时候才更需要去看，看一遍不行就多看几遍。不要轻易说服自己“这个不重要”进而降低要求觉得“了解一下”就好了。这是自欺欺人的做法。更不能放弃，因为越是你难受的东西越能让你脱离舒适区。逼着自己啃完一本书，完成一项艰巨的学习目标，毅力的增长有时远比学到的知识更有意义！</li><li>我们之所以不快乐，是因为我们不够知足。不要思虑不可控的事物，活在当下。寻找一切开心的东西（看喜欢看的书、更健康、与人为善）。</li><li>记笔记完全可以用自己的语言去组织，不要太官话，除非特殊，最好不要直接抄书。</li><li>当学不下去的时候，停下来，或者重新再看一遍。</li><li>善于发现工作中的技术盲点，从这些盲点出发，既能给公司带来效益也能提升个人技能。可以防止眼高手低的毛病。</li><li>学习任何技术前，弄清它的学习路线，否则容易只见树木不见森林。</li><li>学习不能图快，急功近利。一定要在脑中形成清晰的知识地图，不要自欺欺人。</li><li>重内功（算法、计算机原理），轻招式（框架、某项特定的技术）。以不变应万变。</li><li>不需要记知识细节，需要记知识脉络：记笔记分两种，一种是为了查，不需要记忆的。另外一种是梳理思路，将知识点归纳到自己的知识树。</li><li>买书不是目的，学习才是，想学了直奔主题，别屯书（买完书那一刻好像我已经学会了全部）</li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
